package pbo_uts;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//package uts.pbo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.System.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import java.lang.System.Logger.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

//import uts.pbo.DbUtils;
/**
 *
 * @author IT GRC
 */
public class mahasiswa_uts extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    PreparedStatement pstmt = null;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/UTS_PBO";
    String user = "postgres";
    String password = "123";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    /**
     * Creates new form mahasiswa_uts
     */
    public mahasiswa_uts() {
        initComponents();
        tampil();
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKodeMK = new javax.swing.JTextField();
        txtNamaMK = new javax.swing.JTextField();
        txtSKS = new javax.swing.JTextField();
        txtSmt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTabelMK = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MATA KULIAH");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Kode Mata Kuliah ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("SKS ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nama Mata Kuliah ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Semester Ajaran ");

        txtKodeMK.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtKodeMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeMKActionPerformed(evt);
            }
        });

        txtNamaMK.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNamaMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaMKActionPerformed(evt);
            }
        });

        txtSKS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtSmt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        tbTabelMK.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tbTabelMK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTabelMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTabelMKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTabelMK);

        btnInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnUpload.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel3))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtKodeMK)
                                    .addComponent(txtNamaMK)
                                    .addComponent(txtSKS)
                                    .addComponent(txtSmt)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(59, 59, 59)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKodeMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamaMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnInsert)
                    .addComponent(btndelete)
                    .addComponent(btnClear))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnUpload))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKodeMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeMKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeMKActionPerformed

    private void txtNamaMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaMKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaMKActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String KodeMK, NamaMK, SKS, SemesterAjar;
        String hehe = txtKodeMK.getText();
        String hoho = txtNamaMK.getText();
        String huhu = txtSKS.getText();
        String hihi = txtSmt.getText();

        if (hehe.trim().isEmpty() && hoho.trim().isEmpty() && huhu.trim().isEmpty() && hihi.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi dulu yaa data Mata Kuliah nya! ");
        } else if (hehe.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Kode Mata Kuliah dulu yaa! ");
        } else if (hoho.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Nama Mata Kuliah dulu!");
        } else if (huhu.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi SKS terlebih dahulu!");
        } else if (hihi.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Semester Ajaran dulu!");
        } else {
            try {
                Class.forName(driver);
                conn = DriverManager.getConnection(koneksi, user, password);
                conn.setAutoCommit(false);

                String sql = "INSERT INTO MataKuliah VALUES(?,?,?,?)";
                pstmt = conn.prepareStatement(sql);

                KodeMK = txtKodeMK.getText();
                NamaMK = txtNamaMK.getText();
                SKS = txtSKS.getText();
                SemesterAjar = txtSmt.getText();

                pstmt.setString(1, KodeMK);
                pstmt.setString(2, NamaMK);
                pstmt.setLong(3, Long.parseLong(SKS));
                pstmt.setLong(4, Long.parseLong(SemesterAjar));

                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(null, "data berhasil ditambahkan");
                conn.commit();// Commit transaksi setelah sejumlah operasi-insert berhasil
                pstmt.close();
                conn.close();

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, "terjadi kesalahan saat pengisian");
            }
        }
        bersih();
        tampil();

        txtKodeMK.setEditable(true);
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        String KodeMK, NamaMKbaru, SKSbaru, SemesterAjarbaru;
        String hehe = txtKodeMK.getText();
        String hoho = txtNamaMK.getText();
        String huhu = txtSKS.getText();
        String hihi = txtSmt.getText();

        if (hehe.trim().isEmpty() && hoho.trim().isEmpty() && huhu.trim().isEmpty() && hihi.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukkan dulu data Mata Kuliah yang ingin diupdate! ");
        } else if (hehe.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Kode Mata Kuliah dulu yaa! ");
        } else if (hoho.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Nama Mata Kuliah dulu yang ingin diupdate!");
        } else if (huhu.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi SKS dulu yang ign diupdate!");
        } else if (hihi.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "isi Semester Ajaran dulu yang ingin diupdate!");
        } else {
            try {
                Class.forName(driver);
                String sql = "UPDATE MataKuliah SET NamaMk = ?, SKS = ?, SemesterAjar = ? WHERE KodeMK = ?";
                conn = DriverManager.getConnection(koneksi, user, password);
                pstmt = conn.prepareStatement(sql);

                KodeMK = txtKodeMK.getText();
                NamaMKbaru = txtNamaMK.getText();
                SKSbaru = txtSKS.getText();
                SemesterAjarbaru = txtSmt.getText();

                pstmt.setString(1, NamaMKbaru);
                pstmt.setLong(2, Long.parseLong(SKSbaru));
                pstmt.setLong(3, Long.parseLong(SemesterAjarbaru));
                pstmt.setString(4, KodeMK);

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "data berhasil diupdate!");
                    pstmt.close();
                    conn.close();
                    bersih();
                } else {
                    JOptionPane.showMessageDialog(null, "data tidak ditemukan");
                }
            } catch (ClassNotFoundException | SQLException ex) {
            }
            tampil();

            txtKodeMK.setEditable(true);
        }
    }

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        String KodeMK;
        String hehe = txtKodeMK.getText();

        if (hehe.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukkan dulu data Mata Kuliah yang ingin dihapus!");
        } else {
            try {
                Class.forName(driver);
                conn = DriverManager.getConnection(koneksi, user, password);

                int jawab = JOptionPane.showConfirmDialog(null, "Silakan Konfirmasi?");
                switch (jawab) {
                    case JOptionPane.YES_OPTION:
                        String sql = "DELETE FROM MataKuliah WHERE KodeMK = ?";
                        pstmt = conn.prepareStatement(sql);

                        KodeMK = txtKodeMK.getText();
                        pstmt.setString(1, KodeMK);
                        pstmt.executeUpdate();

                        pstmt.close();
                        conn.close();
                        bersih();
                        break;

                    case JOptionPane.NO_OPTION:
                        JOptionPane.showMessageDialog(this, "anda menjawab tidak");
                        break;
                }

            } catch (ClassNotFoundException | SQLException ex) {
                System.out.println("terjadi kesalahan saat melakukan operasi insert dalam loop.");
                ex.printStackTrace();
                try {
                    if (conn != null) {
                        conn.rollback();
                    }
                } catch (SQLException e) {
                    System.out.println("Gagal melakukan rollback transaksi.");
                    e.printStackTrace();
                }
            }
            tampil();

            txtKodeMK.setEditable(true);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        bersih();

        txtKodeMK.setEditable(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void tbTabelMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTabelMKMouseClicked
        int row = tbTabelMK.getSelectedRow();
        txtKodeMK.setText(tbTabelMK.getValueAt(row, 0).toString());
        txtNamaMK.setText(tbTabelMK.getValueAt(row, 1).toString());
        txtSKS.setText(tbTabelMK.getValueAt(row, 2).toString());
        txtSmt.setText(tbTabelMK.getValueAt(row, 3).toString());
        txtKodeMK.setEditable(false);
    }//GEN-LAST:event_tbTabelMKMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        try {
            JasperReport reports;
            String path = "src\\pbo_uts\\report1.jasper";
            reports = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint print = JasperFillManager.fillReport(path, null, conn);
            JasperViewer view = new JasperViewer(print, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);

        } catch (JRException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                Class.forName(driver);
                conn = DriverManager.getConnection(koneksi, user, password);
                String baris;
                String pemisah = ";";

                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);
                    String kode = data[0];
                    String nama = data[1];
                    String sks = data[2];
                    String semester = data[3];

                    if (!kode.isEmpty() && !nama.isEmpty() && !sks.isEmpty() && !semester.isEmpty()) {
                        String sql = "INSERT INTO MataKuliah (KodeMK, NamaMK, SKS, SemesterAjar) VALUES (?,?,?,?)";
                        pstmt = conn.prepareStatement(sql);
                        pstmt.setString(1, kode);
                        pstmt.setString(2, nama);
                        pstmt.setLong(3, Long.parseLong(sks));
                        pstmt.setLong(4, Long.parseLong(semester));

                        pstmt.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Sukses diinput");
                        
            tampil();

                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal diinput");
                    }
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Gagal diinput");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Gagal diinput");
            } catch (ClassNotFoundException | SQLException ex) {
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    public void tampil() {
        try {
            // TODO code application logi
            Class.forName(driver);
            String sql = "SELECT * FROM MataKuliah ";
            conn = DriverManager.getConnection(koneksi, user, password);
            stmt = conn.createStatement();
            
                ResultSet rs = stmt.executeQuery(sql);
                this.tbTabelMK.setModel(DbUtils.resultSetToTableModel(rs));
                while (rs.next()) {
                    System.out.println(String.valueOf(rs.getObject(1)) + " " + String.valueOf(rs.getObject(2)) + " " + String.valueOf(rs.getObject(3)) + " " + String.valueOf(rs.getObject(4)));
                }

        } catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(mahasiswa_uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    public void bersih() {
        txtKodeMK.setText("");
        txtNamaMK.setText("");
        txtSKS.setText("");
        txtSmt.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mahasiswa_uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mahasiswa_uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mahasiswa_uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mahasiswa_uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mahasiswa_uts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton btndelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTabelMK;
    private javax.swing.JTextField txtKodeMK;
    private javax.swing.JTextField txtNamaMK;
    private javax.swing.JTextField txtSKS;
    private javax.swing.JTextField txtSmt;
    // End of variables declaration//GEN-END:variables

    private int masukkanData(Connection conn, String nim, String nama, String SKS, String SemesterAjar) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void peringatan(String simpan_Gagal) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
